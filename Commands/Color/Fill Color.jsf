/*
  Show Color Picker Command v1.0
  Ale Mu√±oz
  Bind to keyboard shortcut for fullscreen panel-less colorpicking goodness

  TODO: Add support for text selections

  shortcut: CTRL + C
*/
try {
  fw.runScript(fw.appJsCommandsDir + "/bs.js");
} catch(e){
  alert("This command requires the bs.js library\rGet it at http://bomberstudios.com/fireworks/");
};

var choice = fw.popupColorPickerOverMouse("#000000", true, false);

Selection.each(function(sel) {
  if (sel.is_symbol()) {
    Selection.save();
    fw.selection = sel;
    // TODO: do not replace effects in symbol, just add the color fill effect
    var original_effects = fw.selection[0].effectList;
    fw.getDocumentDOM().applyEffects({ category:"UNUSED", effects:[ { Blendmode:0, Color:choice, EffectIsVisible:true, EffectMoaID:"{dd54adc0-a279-11d3-b92a000502f3fdbe}", Opacity:100, category:"Adjust Color", name:"Color Fill" } ], name:"UNUSED" });
    Selection.restore();
  } else {
    // if the current object's fill is set to none, we'll have to assign a default fill before we can change the color.
    if(!sel.pathAttributes.fill){
      fw.getDocumentDOM().setFillNColor({ category:"fc_Solid", ditherColors:[ "#000000", "#000000" ], edgeType:"antialiased", feather:0, gradient:null, name:"fn_Normal", pattern:null, shape:"solid", stampingMode:"blend opaque", textureBlend:0, webDitherTransparent:false }, "#000000");
    }
    // make the object's fill a solid color
    sel.pathAttributes.fill.category = 'fc_Solid';
    switch (choice) {
      case "#ffffff00":
        doc.setFillNColor(null, choice);
        break;
      default:
        doc.setFillColor(choice);
        break;
    }
  }
});